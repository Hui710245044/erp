<template>
    <page-dialog v-model="visible" @open="open" @close="close" :title="trendAction.title">
        <div>
            <h3 class="t-left">仓库箱单附件：</h3>
            <el-button v-if="!box_list" type="primary" size="middle" @click="upload_file">上传附件</el-button>
            <el-row v-else>
                <el-col :span="16">
                    <el-tag type="primary"
                            @close="box_close(1, box_list)"
                            closable>{{box_list.name}}</el-tag>
                </el-col>
                <el-col :span="4">
                    <el-button type="primary" size="mini" @click="upload_file">重新上传</el-button>
                </el-col>
                <el-col :span="4">
                    <el-button type="primary" size="mini" @click="download_file">导出</el-button>
                </el-col>
            </el-row>
        </div>
        <div>
            <h3 class="t-left">箱唛附件：</h3>
            <el-button v-if="box_title.length === 0" type="primary" size="middle" :disabled="!box_list" @click="upload_title">上传附件</el-button>
            <el-row v-else>
                <el-col :span="16">
                    <el-tag class="mr-xs mb-xs"
                            closable type="primary"
                            v-for="(file, index) in box_title"
                            @close="box_close(2, file)"
                            :key="index">{{file.name}}</el-tag>
                </el-col>
                <el-col :span="4">
                    <el-button type="primary" size="mini" @click="upload_title">上传附件</el-button>
                </el-col>
                <el-col :span="4">
                    <el-button type="primary" size="mini" @click="download_titles">导出</el-button>
                </el-col>
            </el-row>
        </div>
        <div slot="footer">
            <el-button size="mini" @click.native="visible = false">取消</el-button>
        </div>
        <importFile v-model="importVisible"
                    :import-action="importAction"
                    @search="init"
                    @upload="upload"></importFile>
    </page-dialog>
</template>
<style lang="stylus">

</style>
<script>
    import {downloadFile} from '@/lib/http';
    import {api_get_allocation_attachment, api_delete_allocation_attachment} from "@/api/transfer-plan";

    export default {
        data() {
            return {
                visible: false,
                box_list: "",
                box_title: [],
                importVisible: false,
                importAction: {},
                file: 'download',
                actionList: {
                    box_list: {
                        title: '箱唛清单上传',
                        isMultiple: false,
                        accept: '.xls,.xlsx',
                    },
                    box_title: {
                        title: '箱唛标签上传',
                        isMultiple: true,
                        accept: '.pdf'
                    }
                }
            }
        },
        methods: {
            open() {
                this.init();
            },
            init() {
                this.$http(api_get_allocation_attachment, this.trendAction.id).then(res => {
                    this.box_list = res.packing_list_attachment;
                    this.box_title = res.shipping_mark_attachment;
                }).catch(code => {
                    this.$message({type: 'error', message: code.message || code});
                })
            },
            sure() {

            },
            close() {
                this.importAction = {};
                this.box_list = "";
                this.box_title = [];
                this.importVisible = false;
            },
            upload(type, data) {
                this.box_list = data.packing_list_attachment;
                this.box_title = data.shipping_mark_attachment;
            },
            upload_file() {
                this.importVisible = true;
                this.importAction = this.actionList.box_list;
                this.$set(this.importAction, 'id', this.trendAction.id);
            },
            upload_title() {
                this.importVisible = true;
                this.importAction = this.actionList.box_title;
                this.$set(this.importAction, 'id', this.trendAction.id);
            },
            download_file() {
                let url = `${config.apiHost}allocation/attachment`;
                downloadFile({
                    url: url,
                    get: {full_name: this.box_list.path},
                    fileName: this.box_list.name,
                    suffix: '',
                });
            },
            download_titles() {
                let url = `${config.apiHost}allocation/attachment`;
                this.box_title.forEach(title => {
                    downloadFile({
                        url: url,
                        get: {full_name: title.path},
                        fileName: title.name,
                        suffix: '',
                    })
                })
            },
            box_close(type, title) {
                this.$confirm(`你将删除文件${title.name},确认此操作吗？`, '提示', {
                    confirmButtonText: '确认',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(()=> {
                    this.$http(api_delete_allocation_attachment, this.trendAction.id, {
                        path_name: title.path,
                        type: type,
                    }).then(res => {
                        this.$message({type: 'success', message: res.message || res});
                        if(type === 1) {
                            this.box_list = "";
                        } else {
                            let index = this.box_title.findIndex(row => row.name === title.name);
                            this.box_title.splice(index, 1);
                        }
                    }).catch(code => {
                        this.$message({type: 'error', message: code.message || code});
                    });
                }).catch(()=> {
                    this.$message({
                        type: 'info',
                        message: '已取消',
                    })
                });
            },
        },
        watch: {
            value(val) {
                this.visible = val;
            },
            visible(val) {
                this.$emit('input', val);
            }
        },
        props: {
            value: {},
            trendAction: {},
        },
        components: {
            pageDialog: require('@/components/page-dialog.vue').default,
            importFile: require('./import-file.vue').default,
        }
    }
</script>