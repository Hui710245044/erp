<template>
    <div     class="p-express">
        <page-dialog title="编辑运费及Wish Express设置"    size="large"  v-model="show" :close-on-click-modal="false"  @change="change_dialog" @open="open" @close="close">
            <el-row class="mt-sm  mb-sm" v-if="tableData.product">
                <el-col :span="4">  <img :src="tableData.product.main_image"
                                         height="100" width="100" class="ml-lg"></el-col>
                <el-col :span="20">
                   <div> 产品名称：{{tableData.product.name}}</div>
                    <div><label-item label="国家：">
                        <order-input v-model="form.countries"
                                     class="inline width-super"
                                     @keydown="search"
                                     placeholder="可批量搜索，Shift+回车换行..."></order-input>
                    </label-item>
                        <label-item label="是否启用国家：" class="ml-sm">
                            <el-select v-model="form.isUsing"
                                       class="width-xs"
                                       filterable clearable>
                                <el-option
                                        v-for="res in usingList"
                                        :label="res.label"
                                        :value="res.value"
                                        :key="res.value"
                                ></el-option>
                            </el-select>
                        </label-item>
                        <label-item label="是否启用WE：" class="ml-sm">
                            <el-select v-model="form.isWeUsing"
                                       class="width-xs"
                                       filterable clearable>
                                <el-option
                                        v-for="res in usingList"
                                        :label="res.label"
                                        :value="res.value"
                                        :key="res.value"
                                ></el-option>
                            </el-select>
                        </label-item>
                        <label-item label="是否自定义运费：" class="ml-sm">
                            <el-select v-model="form.usingFreight"
                                       class="width-xs"
                                       filterable clearable>
                                <el-option
                                        v-for="res in usingList"
                                        :label="res.label"
                                        :value="res.value"
                                        :key="res.value"
                                ></el-option>
                            </el-select>
                        </label-item></div>
                    <div class="header-foot mt-sm">
                        <div>
                            <label-item label="WE设置自动匹配：">
                                <el-select v-model="we_model" @change="change">
                                    <el-option v-for="item in modelList" :label="item.title" :value="item.id" :key="item.id" style="width: 175px"></el-option>
                                </el-select>
                            </label-item>
                        </div>
                        <div >
                            <el-button type="primary" size="mini" class="inline ml-sm" @click.native="search">搜索</el-button>
                            <el-button type="warning" size="mini" class="inline" @click.native="clear_search">清空条件</el-button>
                            <!--</el-card>-->
                        </div>
                    </div>
                </el-col>

            </el-row>
            <table class="template">
                <tr>
                    <th>国家</th>
                    <th><label class="red">*</label>已启用的国家&nbsp;<el-checkbox v-model="country"></el-checkbox></th>
                    <th>Wish Express启用&nbsp;<el-checkbox v-model="status"></el-checkbox></th>
                    <th><label class="red">*</label>运费设置($)</th>
                    <th>&nbsp;</th>
                </tr>
                <tbody v-loading="loading" element-loading-text="玩命加载中..." >
                <tr v-for="item in newTableList">
                    <td>{{item.country}}({{item.country_code}})</td>
                    <td><el-checkbox v-model="item.enabled"  ></el-checkbox></td>
                    <td><el-checkbox v-model="item.wish_express" ></el-checkbox></td>
                    <td>
                        <el-row>
                            <el-col :span="12">
                                <el-select v-model="item.use_product_shipping" filterable clearable>
                                    <el-option label="使用产品配送运费" :value="1"> </el-option>
                                    <el-option label="自定义设置运费" :value="0"></el-option>
                                </el-select>
                            </el-col>
                            <el-col :span="12">
                                <el-input v-model="item.shipping_price"
                                                v-if="!item.use_product_shipping" :class="{error:item.err}"></el-input>
                            </el-col>
                        </el-row>
                    </td>
                    <td><span class='operate' @click="aplay(item)">应用到所有</span></td>
                </tr>

                </tbody>
            </table>
            <div slot="footer" class="dialog-footer">
                <el-button size="mini" @click.native="keep_add" type="primary">保  存</el-button>
                <el-button size="mini" @click.native="keep_up" type="primary">保存并上传到平台</el-button>
                <el-button size="mini" @click.native="show=false">关   闭</el-button>
            </div>
        </page-dialog>
    </div>
</template>
<style lang="stylus">
.header-foot{
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 837px;
}
.error{
    border:1px solid red;
}
</style>
<script>
    import {api_wish_express,api_wish_express_save,api_wish_express_save_now,api_get_express_list,api_get_wish_expressData,api_wish_express_detail} from "../../../../api/kandeng"
    export default{
        data(){
            return {
                modelList:[],
                newTableList:[],
                we_model:'',
                show:false,
                id:0,
                tableData:{},
                loading:true,
                form:{
                    countries:"",
                    isUsing:"",
                    isWeUsing:"",
                    usingFreight:"",
                },
                usingList:[
                    {label:"全部",value:""},
                    {label:"是",value:1},
                    {label:"否",value:0},
                ],
            }
        },
        created(){
            this.$http(api_get_express_list).then(res=>{
                res.data.forEach(row=>{
                    let transport_p = row.transport_property.split("、");
                    let title = `${row.name}+${transport_p}+$ ${row.from_price}-${row.to_price}`;
                    this.$set(row,'title',title)
                });
                this.modelList = res.data
            })
        },
        mounted(){
        },
        computed: {
            country:{
                get(){
                    if(this.newTableList&&this.newTableList.length>0){
                        return this.get_start_using('country',this.newTableList);
                    }
                },
                set(val){
                    this.set_start_using('country',this.newTableList,val);
                },
                // get(){
                //     if (this.tableData.all_country_shipping){
                //         let sta=this.tableData.all_country_shipping.find(row =>!row.enabled);
                //         return !sta;
                //     }else {
                //         return false;
                //     }
                // },
                // set(val){
                //     this.tableData.all_country_shipping.forEach(row=>{
                //         row.enabled=val;
                //     })
                // }
            },
            status:{
                get(){
                    if(this.newTableList&&this.newTableList.length>0){
                        return this.get_start_using('status',this.newTableList);
                    }
                },
                set(val){
                    this.set_start_using('status',this.newTableList,val);
                },
                // get(){
                //     if (this.tableData.all_country_shipping){
                //         let sta=this.tableData.all_country_shipping.find(row => !row.wish_express);
                //         return !sta;
                //     }else {
                //         return false;
                //     }
                // },
                // set(val){
                //     this.tableData.all_country_shipping.forEach(row=>{
                //         row.wish_express=val;
                //     })
                // }
            },
        },
        methods: {
            open(){
                this.init_data()
            },
            close(){
                this.dialog=false;
                this.we_model=''
            },
            get_start_using(name,Array){
                if(name==='country'){
                    let cur = Array.find(row=>!row.enabled);
                    return !cur;
                }else{
                    let cur = Array.find(row=>!row.wish_express);
                    return !cur;
                }
            },
            set_start_using(name,Array,val){
                if(name==='country'){
                    Array.forEach(row=>{
                        row.enabled = val;
                        if(row.enabled){
                            if(row.closed){
                                row.closed = false;
                                this.closedCountry = false;
                            }
                        }
                        this.change_country(row);
                    });
                }else{
                    Array.forEach(row=>{
                        row.wish_express = val;
                        if(row.wish_express){
                            if(!row.enabled){
                                row.enabled = true;
                            }
                            if(row.closed){
                                row.closed = false;
                                this.closedCountry = false;
                            }
                        }
                        this.change_country(row);
                    });
                }
            },
            change(val){
                this.$http(api_wish_express_detail,{id:val}).then(res=>{
                    console.log(val,'www');
                    this.$nextTick(()=>{
                        this.newTableList.forEach(k=>{
                            if(res.all_country_shipping.some(row=>k.country===row.ProductCountryShipping.country)){
                                let i = res.all_country_shipping.find(row2=>k.country===row2.ProductCountryShipping.country);
                                k.enabled= i.ProductCountryShipping.enabled?true:false;
                                k.use_product_shipping = i.ProductCountryShipping.use_product_shipping;
                                if(i.ProductCountryShipping.shipping_price.includes('Use')){
                                    k.shipping_price = ''
                                }else {
                                    k.shipping_price = i.ProductCountryShipping.shipping_price
                                }
                            }
                        });
                    })
                })
            },
            search(){
                this.search_data();
            },
            clear_search(){
                this.form = {
                    countries:"",
                    isUsing:"",
                    isWeUsing:"",
                    usingFreight:"",
                };
                this.search_data();
            },
            search_data(){
                let cur = {},table=[];
                let countries = [];
                if(this.form.countries){
                    countries = this.form.countries.split('\n').map(row=>row.trim());
                    cur.country=countries
                }
                this.form.isUsing!==""&&(cur.enabled= this.form.isUsing?true:false);
                this.form.usingFreight!==""&&(cur.use_product_shipping = this.form.usingFreight?0:1);//0表示自定义  1表示
                this.form.isWeUsing!==""&&(cur.wish_express= this.form.isWeUsing?true:false);
            },
            aplay(item){
                this.tableData.all_country_shipping.forEach(row=>{
                    row.use_product_shipping=item.use_product_shipping;
                    if(!row.shipping_price){
                        this.$set(row,"shipping_price",item.shipping_price)
                    }else {
                        row.shipping_price=item.shipping_price;
                    }

                })
            },
            init_data(){
                this.isLoad = true;
                this.$http(api_get_wish_expressData).then(res=>{
                    this.newTableList=res;
                    this.isLoad = false;
                }).catch(code=>{
                    this.isLoad = false;
                    this.$message({type:"error",message:code});
                })
            },
            get_data(){
                this.tableData={};
                this.loading=true;
                this.$http(api_wish_express,{product_id:this.id}).then(res=>{
                    res.data.all_country_shipping&&res.data.all_country_shipping.forEach(row=>{
                            row.enabled=row.enabled?true:false;
                            row.wish_express=row.wish_express?true:false;
                    });
                    this.tableData=res.data;
                    this.loading=false;
                }).catch(code=>{
                    this.loading=false;
                    this.$message({type:"error",message:code.message||code});
                })
            },
            keep_add(){
                if(!this.add_params())return;
                let all_country_shipping = this.add_params();
                if(all_country_shipping.length<=0) return this.$message({type:"warning",message:"请至少填写一条完整的数据！"});
                this.$http(api_wish_express_save,{all_country_shipping,product_id:this.id,uid:10}).then(res=>{
                    this.$message({
                        type:"success",
                        message:res.message||res
                    });
                    this.show=false;
                }).catch(code=>{
                    this.$message({message:code.message||code,type:'error'});
                    this.newTableList.forEach(row=>{
                        if(code.error.some(row1=>row1===row.country_code)){
                            //let i = code.error.find(row2=>row.country_code===row2);
                            this.$set(row,'err',true)
                        }
                    });
                })
            },
            add_params(){
                let curObj = this.newTableList.find(row=>{return (!!row.enabled&&row.use_product_shipping==='')||(!row.enabled&&row.use_product_shipping!=='')});
                if(curObj)return this.$message({type:"warning",message:"数据有必填项未补充完整!"});
                let all_country_shipping=window.clone(this.newTableList).filter(res=>(!!res.enabled&&res.use_product_shipping!=='')||res.closed);
                all_country_shipping.forEach(row=>{
                    row.enabled=row.enabled?1:0;
                    row.wish_express=row.wish_express?1:0;
                    if(row.use_product_shipping){
                        delete row.shipping_price
                    }
                });
                return all_country_shipping;
            },
            keep_up(){
                if(!this.add_params())return;
                let all_country_shipping = this.add_params();
                if(all_country_shipping.length<=0) return this.$message({type:"warning",message:"请至少填写一条完整的数据！"});
                this.$http(api_wish_express_save_now,{all_country_shipping,product_id:this.id,uid:10}).then(res=>{
                    this.$message({
                        type:"success",
                        message:res.message||res
                    });
                    this.show=false;
                }).catch(code=>{
                    this.$message({message:code.message||code,type:'error'})
                })

            },
            change_dialog(val){
                if(val){
//                    this.country=false;
//                    this.status=false;
                    this.get_data();
                }
            }
        },
        filters: {},
        watch: {
            show(val){
                this.$emit("input", val)
            },
            value(val){
                this.show=val;
            }
        },
        props: {
            value:{}
        },
        components: {
            pageDialog:require("@/components/page-dialog.vue").default,
            labelItem:require('@/components/label-item.vue').default,
            orderInput:require('@/components/order-input.vue').default,
        }
    }
</script>