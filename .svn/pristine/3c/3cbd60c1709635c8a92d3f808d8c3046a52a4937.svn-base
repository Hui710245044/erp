
<template>
    <page class="p-index">
        <search
            ref="search"
            :searchData="searchData"
            @select-status="select_status"
            @search="search"
            @clear="clear"
            :audit="audit"
            @audit="auditSelect">
        </search>
        <el-row class="mt-sm">
            <permission tag="request-button"
                        :route="apis.url_post_virtual_finance_purchase_push_yks"
                        class="inline ml-sm"
                        :mintime="200"
                        :disabled="selectList.length === 0"
                        req-key="url_post_virtual_finance_purchase_push_yks"
                        @click="push_yks">推送给有棵树
            </permission>
        </el-row>
        <table-list :loading="loading"
                    class="mt-sm"
                    :tableData="tableData"
                    :first-loading="firstLoading"
                    @selection-change="selectionChange"
                    @search="search">
        </table-list>
        <el-pagination
            class="page-fixed"
            @size-change="handleSizeChange"
            @current-change="handleCurrentChange"
            :current-page="searchData.page"
            :page-sizes="[20, 50, 100, 200,500]"
            :page-size="searchData.pageSize"
            layout="total, sizes, prev, pager, next, jumper"
            :total="total">
        </el-pagination>
    </page>
</template>
<style lang="stylus">
    .p-index{
        .el-dropdown .el-button-group {
            display: inline-block;
            position: relative;
            top: -1px;
        }
        .el-message-box__status{
            top:27% !important;
        }
        .btn{
            margin:5px  0;
            border :0;
        }
    }
</style>
<script>
    import {api_publish_edit_pay,api_virtual_status,url_post_virtual_finance_purchase_push_yks,api_post_virtual_finance_purchase_push_yks} from "../../../api/purchase";
    import {url_get_balance}from '../../../api/assert-sup';
    import {
        url_finance_list,
        url_publish_edit_user,
    } from "../../../api/Payment";
    export default{
        permission:{
            url_finance_list,
            url_publish_edit_user,
            url_get_balance,
            url_post_virtual_finance_purchase_push_yks
        },
        page:{
            devinfo:{
                frontEnd:'熊辉',
                backEnd:'黄伟杰',
                createTime:'2017-9-22',
                updateTime:'2017-9-25'
            },
            beforeClose(){
                return true;
            }
        },
        refresh(){
            this.init();
        },
        data(){
            return{
                audit:[],
                firstLoading:true,
                loading:false,
                total:0,
                selectList:[],
                tableData:[],
                searchData:{
                    page:1,
                    pageSize:50,
                    status:'',
                    order_type:"0",
                    order_number:"",
                    date_b:"",
                    date_e:"",
                    supplier_id:"",
                    time_status:"0",
                    warehouse_id:"",
                    balance_type:"",
                    payment_status:'',
                    purchase_order_id:"",
                    review_status:''
                },
            }
        },
        mounted(){
            this.get_status();
            this.init();
        },
        methods:{
            get_status(){
                this.$http(api_virtual_status).then(res=>{
                    this.audit = [{label:'全部',value:''},...res];
                });
            },
            init_params(){
                let paramsData = window.clone(this.searchData);
                if(this.searchData.date_b){
                    let d = new Date(this.searchData.date_b);
                    paramsData.date_b = d.getFullYear() + '-' + (d.getMonth() + 1) + '-' + d.getDate();
                }else {
                    paramsData.date_b='';
                }
                if(this.searchData.date_e){
                    let e = new Date(this.searchData.date_e);
                    paramsData.date_e = e.getFullYear() + '-' + (e.getMonth() + 1) + '-' + e.getDate();
                }else {
                    paramsData.date_e='';
                }
                if(this.searchData.order_number.trim()){
                    paramsData.order_number = this.searchData.order_number.replace(new RegExp(' ', 'gm'), '\n').trim().split('\n').map(row => row.trim()).filter(row => row !== '');
                }else{
                    paramsData.order_number = '';
                }
                return paramsData
            },
            //页面初始化请求列表数据
            init(){
                let parm = this.init_params();
                this.tableData=[];
                this.loading=true;
                this.$http(api_publish_edit_pay,parm).then(res=>{
                    this.total=res.count;
                    this.tableData=res.data;
                    this.loading = false;
                    this.firstLoading = false
                }).catch(code=>{
                    this.$message({
                        type:'error',
                        message:code.message || code
                    })
                })
            },
            select_status(val){
                this.searchData.payment_status=val;
                this.init();
            },
            auditSelect(val){
              this.searchData.review_status = val;
              this.init();
            },
            //点击搜索按钮  搜索
            search(){
                this.init();
            },
            //清空
            clear(){
                Object.keys(this.searchData).forEach(key=>{
                    this.searchData[key] = '';
                });
                this.searchData={
                    page:1,
                    pageSize:50,
                    snType:"purchase_order_code",
                    dateType:"purchase_time",
                };
                this.init();
            },
            //更改页面条数
            handleSizeChange(val) {
                this.searchData.pageSize=val;
                this.init();
            },
            //跳转页数
            handleCurrentChange(val) {
                this.searchData.page=val;
                this.init();
            },
            //选中
            selectionChange(val){
                this.selectList=val;
            },
            refresh(){
                this.init();
            },
            push_yks() {
                this.$confirm(`您将已勾选的虚拟采购单推送给有棵树，确定进行此操作?`, '提示', {
                    confirmButtonText: "确定",
                    cancelButtonText: "取消",
                    type: "warning"
                }).then(() => {
                    this.$http(api_post_virtual_finance_purchase_push_yks, {ids: JSON.stringify(this.selectList.map(row => row.virtual_finance_purchase_id))}).then(res => {
                        this.$message({type: 'success', message: res.message || res});
                        this.init();
                    }).catch(code => {
                        this.$message({type: 'error', message: code.message || code});
                    }).finally(() => {
                        setTimeout(() => {
                            this.$reqKey('url_post_virtual_finance_purchase_push_yks', false);
                        }, 200);
                    })
                }).catch(() => {
                    this.$message({
                        type: "info",
                        message: "已取消"
                    })
                }).finally(() => {
                    setTimeout(() => {
                        this.$reqKey('url_post_virtual_finance_purchase_push_yks', false);
                    }, 200);
                });
            }
        },
        components:{
            search:require('./search').default,
            tableList:require('./table-list').default,

        }
    }
</script>
